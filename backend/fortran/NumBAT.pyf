!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module NumBAT ! in 
    interface  ! in :NumBAT
        subroutine conv_gmsh(geoname) ! in :NumBAT:conv_gmsh.f
            character*100 intent(in) :: geoname
        end subroutine conv_gmsh
        subroutine calc_em_modes(lambda,nval,debug,mesh_file,npt,nel,nb_typ_el,n_eff,bloch_vec,d_in_m,shift,e_h_field,i_cond,itermax,plot_modes,plot_real,plot_imag,plot_abs,cmplx_max,real_max,int_max,beta1,sol1,mode_pol,table_nod,type_el,type_nod,x_arr,ls_material) ! in :NumBAT:py_calc_modes.f
            double precision intent(in) :: lambda
            integer*8 intent(in) :: nval
            integer*8 intent(in) :: debug
            character*1000 intent(in) :: mesh_file
            integer*8 intent(in) :: npt
            integer*8 intent(in) :: nel
            integer*8 intent(in),depend(n_eff) :: nb_typ_el
            complex*16 dimension(nb_typ_el),intent(in) :: n_eff
            double precision dimension(2),intent(in) :: bloch_vec
            double precision intent(in) :: d_in_m
            complex*16 intent(in) :: shift
            integer*8 intent(in) :: e_h_field
            integer*8 intent(in) :: i_cond
            integer*8 intent(in) :: itermax
            integer*8 intent(in) :: plot_modes
            integer*8 intent(in) :: plot_real
            integer*8 intent(in) :: plot_imag
            integer*8 intent(in) :: plot_abs
            integer*8 intent(in) :: cmplx_max
            integer*8 intent(in) :: real_max
            integer*8 intent(in) :: int_max
            complex*16, target,dimension(nval),intent(out),depend(nval) :: beta1
            complex*16, target,dimension(3,13,nval,nel),intent(out),depend(nval,nel) :: sol1
            complex*16 dimension(4,nval),intent(out),depend(nval) :: mode_pol
            integer*8 dimension(6,nel),intent(out),depend(nel) :: table_nod
            integer*8 dimension(nel),intent(out),depend(nel) :: type_el
            integer*8 dimension(npt),intent(out),depend(npt) :: type_nod
            double precision dimension(2,npt),intent(out),depend(npt) :: x_arr
            complex*16 dimension(1,13,nel),intent(out),depend(nel) :: ls_material
        end subroutine calc_em_modes
        subroutine calc_ac_modes(beta_in,nval,debug,mesh_file,npt,nel,nb_typ_el,c_tensor,rho,d_in_m,shift,i_cond,itermax,tol,plot_modes,cmplx_max,real_max,int_max,supplied_geo_flag,type_nod,symmetry_flag,table_nod,type_el,x_arr,beta1,sol1,mode_pol) ! in :NumBAT:py_calc_modes_AC.f
            complex*16 intent(in) :: beta_in
            integer*8 intent(in) :: nval
            integer*8 intent(in) :: debug
            character*1000 intent(in) :: mesh_file
            integer*8 intent(in),depend(x_arr,type_nod) :: npt
            integer*8 intent(in),depend(type_el,table_nod) :: nel
            integer*8 intent(in),depend(rho,c_tensor) :: nb_typ_el
            complex*16 dimension(6,6,nb_typ_el),intent(in) :: c_tensor
            complex*16 dimension(nb_typ_el),intent(in) :: rho
            double precision intent(in) :: d_in_m
            complex*16 intent(in) :: shift
            integer*8 intent(in) :: i_cond
            integer*8 intent(in) :: itermax
            double precision intent(in) :: tol
            integer*8 intent(in) :: plot_modes
            integer*8 intent(in) :: cmplx_max
            integer*8 intent(in) :: real_max
            integer*8 intent(in) :: int_max
            integer*8 intent(in) :: supplied_geo_flag
            integer*8 dimension(npt),intent(in) :: type_nod
            integer*8 intent(in) :: symmetry_flag
            integer*8 dimension(6,nel),intent(out,in) :: table_nod
            integer*8 dimension(nel),intent(out,in) :: type_el
            double precision dimension(2,npt),intent(out,in) :: x_arr
            complex*16, target,dimension(nval),intent(out),depend(nval) :: beta1
            complex*16, target,dimension(3,6,nval,nel),intent(out),depend(nval,nel) :: sol1
            complex*16 dimension(4,nval),intent(out),depend(nval) :: mode_pol
        end subroutine calc_ac_modes
        subroutine em_mode_energy_int_v2_ez(k_0,nval,nel,npt,nnodes_p2,table_nod,x,betas,soln_k1,overlap) ! in :NumBAT:EM_mode_energy_int_v2_Ez.f
            double precision intent(in) :: k_0
            integer*8 intent(in),depend(soln_k1,betas) :: nval
            integer*8 intent(in),depend(soln_k1,table_nod) :: nel
            integer*8 intent(in),depend(x) :: npt
            integer*8 intent(in),depend(soln_k1,table_nod) :: nnodes_p2
            integer*8 dimension(nnodes_p2,nel),intent(in) :: table_nod
            double precision dimension(2,npt),intent(in) :: x
            complex*16 dimension(nval),intent(in) :: betas
            complex*16 dimension(3,nnodes_p2 + 7,nval,nel),intent(in) :: soln_k1
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine em_mode_energy_int_v2_ez
        subroutine em_mode_energy_int_ez(k_0,nval,nel,npt,nnodes,table_nod,x,betas,soln_k1,overlap) ! in :NumBAT:EM_mode_energy_int_Ez.f
            double precision intent(in) :: k_0
            integer*8 intent(in),depend(soln_k1,betas) :: nval
            integer*8 intent(in),depend(soln_k1,table_nod) :: nel
            integer*8 intent(in),depend(x) :: npt
            integer*8 intent(in),depend(soln_k1,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            double precision dimension(2,npt),intent(in) :: x
            complex*16 dimension(nval),intent(in) :: betas
            complex*16 dimension(3,nnodes + 7,nval,nel),intent(in) :: soln_k1
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine em_mode_energy_int_ez
        subroutine photoelastic_int(nval_em_p,nval_em_s,nval_ac,ival1,ival2,ival3,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,p_tensor,beta_ac,soln_em_p,soln_em_s,soln_ac,eps_lst,debug,overlap) ! in :NumBAT:photoelastic_int.f
            integer*8 intent(in),depend(soln_em_p) :: nval_em_p
            integer*8 intent(in),depend(soln_em_s) :: nval_em_s
            integer*8 intent(in),depend(soln_ac) :: nval_ac
            integer*8 intent(in) :: ival1
            integer*8 intent(in) :: ival2
            integer*8 intent(in) :: ival3
            integer*8 intent(in),depend(soln_ac,soln_em_s,soln_em_p,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,soln_em_s,soln_em_p,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(eps_lst,p_tensor) :: nb_typ_el
            complex*16 dimension(3,3,3,3,nb_typ_el),intent(in) :: p_tensor
            complex*16 intent(in) :: beta_ac
            complex*16 dimension(3,nnodes,nval_em_p,nel),intent(in) :: soln_em_p
            complex*16 dimension(3,nnodes,nval_em_s,nel),intent(in) :: soln_em_s
            complex*16 dimension(3,nnodes,nval_ac,nel),intent(in) :: soln_ac
            complex*16 dimension(nb_typ_el),intent(in) :: eps_lst
            integer*8 intent(in) :: debug
            complex*16 dimension(nval_em_s,nval_em_p,nval_ac),intent(out),depend(nval_em_s,nval_em_p,nval_ac) :: overlap
        end subroutine photoelastic_int
        subroutine photoelastic_int_v2(nval_em_p,nval_em_s,nval_ac,ival1,ival2,ival3,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,p_tensor,beta_ac,soln_em_p,soln_em_s,soln_ac,eps_lst,debug,overlap) ! in :NumBAT:photoelastic_int_v2.f
            integer*8 intent(in),depend(soln_em_p) :: nval_em_p
            integer*8 intent(in),depend(soln_em_s) :: nval_em_s
            integer*8 intent(in),depend(soln_ac) :: nval_ac
            integer*8 intent(in) :: ival1
            integer*8 intent(in) :: ival2
            integer*8 intent(in) :: ival3
            integer*8 intent(in),depend(soln_ac,soln_em_s,soln_em_p,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,soln_em_s,soln_em_p,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(eps_lst,p_tensor) :: nb_typ_el
            complex*16 dimension(3,3,3,3,nb_typ_el),intent(in) :: p_tensor
            complex*16 intent(in) :: beta_ac
            complex*16 dimension(3,nnodes,nval_em_p,nel),intent(in) :: soln_em_p
            complex*16 dimension(3,nnodes,nval_em_s,nel),intent(in) :: soln_em_s
            complex*16 dimension(3,nnodes,nval_ac,nel),intent(in) :: soln_ac
            complex*16 dimension(nb_typ_el),intent(in) :: eps_lst
            integer*8 intent(in) :: debug
            complex*16 dimension(nval_em_s,nval_em_p,nval_ac),intent(out),depend(nval_em_s,nval_em_p,nval_ac) :: overlap
        end subroutine photoelastic_int_v2
        subroutine ac_mode_power_int(nval,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,c_tensor_z,beta_ac,omega_ac,soln_ac,debug,overlap) ! in :NumBAT:AC_mode_power_int.f
            integer*8 intent(in),depend(omega_ac,soln_ac) :: nval
            integer*8 intent(in),depend(soln_ac,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(c_tensor_z) :: nb_typ_el
            complex*16 dimension(3,3,3,nb_typ_el),intent(in) :: c_tensor_z
            complex*16 intent(in) :: beta_ac
            complex*16 dimension(nval),intent(in) :: omega_ac
            complex*16 dimension(3,nnodes,nval,nel),intent(in) :: soln_ac
            integer*8 intent(in) :: debug
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine ac_mode_power_int
        subroutine ac_mode_power_int_v2(nval,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,c_tensor_z,beta_ac,omega_ac,soln_ac,overlap) ! in :NumBAT:AC_mode_power_int_v2.f
            integer*8 intent(in),depend(omega_ac,soln_ac) :: nval
            integer*8 intent(in),depend(soln_ac,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(c_tensor_z) :: nb_typ_el
            complex*16 dimension(3,3,3,nb_typ_el),intent(in) :: c_tensor_z
            complex*16 intent(in) :: beta_ac
            complex*16 dimension(nval),intent(in) :: omega_ac
            complex*16 dimension(3,nnodes,nval,nel),intent(in) :: soln_ac
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine ac_mode_power_int_v2
        subroutine ac_mode_power_int_v4(nval,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,c_tensor,beta_ac,omega_ac,soln_ac,overlap) ! in :NumBAT:AC_mode_power_int_v4.f
            integer*8 intent(in),depend(omega_ac,soln_ac) :: nval
            integer*8 intent(in),depend(soln_ac,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(c_tensor) :: nb_typ_el
            complex*16 dimension(6,6,nb_typ_el),intent(in) :: c_tensor
            complex*16 intent(in) :: beta_ac
            complex*16 dimension(nval),intent(in) :: omega_ac
            complex*16 dimension(3,nnodes,nval,nel),intent(in) :: soln_ac
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine ac_mode_power_int_v4
        subroutine ac_alpha_int(nval,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,eta_tensor,beta_ac,omega_ac,soln_ac,ac_mode_energy_elastic,debug,overlap) ! in :NumBAT:AC_alpha_int.f
            integer*8 intent(in),depend(ac_mode_energy_elastic,omega_ac,soln_ac) :: nval
            integer*8 intent(in),depend(soln_ac,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(eta_tensor) :: nb_typ_el
            complex*16 dimension(3,3,3,3,nb_typ_el),intent(in) :: eta_tensor
            complex*16 intent(in) :: beta_ac
            complex*16 dimension(nval),intent(in) :: omega_ac
            complex*16 dimension(3,nnodes,nval,nel),intent(in) :: soln_ac
            complex*16 dimension(nval),intent(in) :: ac_mode_energy_elastic
            integer*8 intent(in) :: debug
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine ac_alpha_int
        subroutine ac_alpha_int_v2(nval,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,eta_tensor,beta_ac,omega_ac,soln_ac,ac_mode_energy_elastic,overlap) ! in :NumBAT:AC_alpha_int_v2.f
            integer*8 intent(in),depend(ac_mode_energy_elastic,omega_ac,soln_ac) :: nval
            integer*8 intent(in),depend(soln_ac,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(eta_tensor) :: nb_typ_el
            complex*16 dimension(3,3,3,3,nb_typ_el),intent(in) :: eta_tensor
            complex*16 intent(in) :: beta_ac
            complex*16 dimension(nval),intent(in) :: omega_ac
            complex*16 dimension(3,nnodes,nval,nel),intent(in) :: soln_ac
            complex*16 dimension(nval),intent(in) :: ac_mode_energy_elastic
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine ac_alpha_int_v2
        subroutine moving_boundary(nval_em_p,nval_em_s,nval_ac,ival1,ival2,ival3,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,typ_select_in,typ_select_out,soln_em_p,soln_em_s,soln_ac,eps_lst,debug,overlap) ! in :NumBAT:moving_boundary.f
            integer*8 intent(in),depend(soln_em_p) :: nval_em_p
            integer*8 intent(in),depend(soln_em_s) :: nval_em_s
            integer*8 intent(in),depend(soln_ac) :: nval_ac
            integer*8 intent(in) :: ival1
            integer*8 intent(in) :: ival2
            integer*8 intent(in) :: ival3
            integer*8 intent(in),depend(soln_ac,soln_em_s,soln_em_p,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,soln_em_s,soln_em_p,table_nod) :: nnodes
            integer*8 dimension(6,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(eps_lst) :: nb_typ_el
            integer*8 intent(in) :: typ_select_in
            integer*8 intent(in) :: typ_select_out
            complex*16 dimension(3,nnodes,nval_em_p,nel),intent(in) :: soln_em_p
            complex*16 dimension(3,nnodes,nval_em_s,nel),intent(in) :: soln_em_s
            complex*16 dimension(3,nnodes,nval_ac,nel),intent(in) :: soln_ac
            complex*16 dimension(nb_typ_el),intent(in) :: eps_lst
            integer intent(in) :: debug
            complex*16 dimension(nval_em_s,nval_em_p,nval_ac),intent(out),depend(nval_em_s,nval_em_p,nval_ac) :: overlap
        end subroutine moving_boundary
        subroutine array_material_ac(npt,nel,nb_typ_el,type_el,rho,c_tensor,p_tensor,eta_tensor,ls_material) ! in :NumBAT:array_material_AC.f
            integer*8 intent(in) :: npt
            integer*8 intent(in),depend(type_el) :: nel
            integer*8 intent(in),depend(eta_tensor,p_tensor,c_tensor,rho) :: nb_typ_el
            integer*8 dimension(nel),intent(in) :: type_el
            complex*16 dimension(nb_typ_el),intent(in) :: rho
            complex*16 dimension(6,6,nb_typ_el),intent(in) :: c_tensor
            complex*16 dimension(3,3,3,3,nb_typ_el),intent(in) :: p_tensor
            complex*16 dimension(3,3,3,3,nb_typ_el),intent(in) :: eta_tensor
            complex*16 dimension(10,6,nel),intent(out),depend(nel) :: ls_material
        end subroutine array_material_ac
        subroutine ac_mode_elastic_energy_int(nval,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,rho,omega_ac,soln_ac,debug,overlap) ! in :NumBAT:AC_mode_elastic_energy_int.f
            integer*8 intent(in),depend(omega_ac,soln_ac) :: nval
            integer*8 intent(in),depend(soln_ac,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(rho) :: nb_typ_el
            complex*16 dimension(nb_typ_el),intent(in) :: rho
            complex*16 dimension(nval),intent(in) :: omega_ac
            complex*16 dimension(3,nnodes,nval,nel),intent(in) :: soln_ac
            integer*8 intent(in) :: debug
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine ac_mode_elastic_energy_int
        subroutine ac_mode_elastic_energy_int_v4(nval,nel,npt,nnodes,table_nod,type_el,x,nb_typ_el,rho,omega_ac,soln_ac,overlap) ! in :NumBAT:AC_mode_elastic_energy_int_v4.f
            integer*8 intent(in),depend(omega_ac,soln_ac) :: nval
            integer*8 intent(in),depend(soln_ac,table_nod) :: nel
            integer*8 intent(in),depend(x,type_el) :: npt
            integer*8 intent(in),depend(soln_ac,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in),depend(nel) :: type_el
            double precision dimension(2,npt),intent(in) :: x
            integer*8 intent(in),depend(rho) :: nb_typ_el
            complex*16 dimension(nb_typ_el),intent(in) :: rho
            complex*16 dimension(nval),intent(in) :: omega_ac
            complex*16 dimension(3,nnodes,nval,nel),intent(in) :: soln_ac
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine ac_mode_elastic_energy_int_v4
        subroutine em_mode_e_energy_int(nval,nel,npt,nnodes,table_nod,type_el,nb_typ_el,n_lst,x,soln_em,overlap) ! in :NumBAT:EM_mode_E_energy_int.f
            integer*8 intent(in),depend(soln_em) :: nval
            integer*8 intent(in),depend(type_el,soln_em,table_nod) :: nel
            integer*8 intent(in),depend(x) :: npt
            integer*8 intent(in),depend(soln_em,table_nod) :: nnodes
            integer*8 dimension(nnodes,nel),intent(in) :: table_nod
            integer*8 dimension(nel),intent(in) :: type_el
            integer*8 intent(in),depend(n_lst) :: nb_typ_el
            complex*16 dimension(nb_typ_el),intent(in) :: n_lst
            double precision dimension(2,npt),intent(in) :: x
            complex*16 dimension(3,nnodes + 7,nval,nel),intent(in) :: soln_em
            complex*16 dimension(nval),intent(out),depend(nval) :: overlap
        end subroutine em_mode_e_energy_int
        subroutine h_mode_field_ez(k_0,nval,nel,npt,nnodes_p2,table_nod,x,betas,soln_k1,soln_h1) ! in :NumBAT:H_mode_field_Ez.f
            double precision intent(in) :: k_0
            integer*8 intent(in),depend(soln_k1,betas) :: nval
            integer*8 intent(in),depend(soln_k1,table_nod) :: nel
            integer*8 intent(in),depend(x) :: npt
            integer*8 intent(in),depend(soln_k1,table_nod) :: nnodes_p2
            integer*8 dimension(nnodes_p2,nel),intent(in) :: table_nod
            double precision dimension(2,npt),intent(in) :: x
            complex*16 dimension(nval),intent(in) :: betas
            complex*16 dimension(3,nnodes_p2 + 7,nval,nel),intent(in) :: soln_k1
            complex*16 dimension(3,nnodes_p2,nval,nel),intent(out),depend(nnodes_p2,nval,nel) :: soln_h1
        end subroutine h_mode_field_ez
        subroutine array_size(nel,nval,int_size,cmplx_size,real_size) ! in :NumBAT:array_size.f
            integer*8 intent(in) :: nel
            integer*8 intent(in) :: nval
            integer*8 intent(out) :: int_size
            integer*8 intent(out) :: cmplx_size
            integer*8 intent(out) :: real_size
        end subroutine array_size
    end interface 
end python module NumBAT

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
